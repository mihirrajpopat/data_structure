PROGRAM 1

┌──(kali㉿kali)-[~/Downloads]
└─$ ./p          
Enter string 1 : yashvi

 y  a  s  h  v  i 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


 Enter string 2 : yashvi

 y  a  s  h  v  i 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


 result : 0 -> Both string are same

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p
Enter string 1 : yashvi

 y  a  s  h  v  i 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


 Enter string 2 : yashv

 y  a  s  h  v 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


 result : 1 -> String 1 is greater than string 2

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p
Enter string 1 : yashv

 y  a  s  h  v 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


 Enter string 2 : yashvi

 y  a  s  h  v  i 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


 result : -1 -> String 2 is greater than string 1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


PROGRAM 2

┌──(kali㉿kali)-[~/Downloads]
└─$ ./p      

 Enter Infix String : x+y*z/w+u

 Prefix Expression : 
 +  +  x  /  *  y  z  w  u  
 
 
 ┌──(kali㉿kali)-[~/Downloads]
└─$ ./p

 Enter Infix String : a*b+c/d

 Prefix Expression : 
 +  *  a  b  /  c  d   
 
 
 ┌──(kali㉿kali)-[~/Downloads]
└─$ ./p

 Enter Infix String : k+l-m*n+(o^p)*w/u/v*t+q

 Prefix Expression : 
 +  +  -  +  k  l  *  m  n  *  /  /  *  ^  o  p  w  u  v  t  q                                                                                                                                        


PROGRAM 3

                                                                                                                                      
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 1

Enter data : 1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 2

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 3

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 5

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 5

1 -> 2 -> 3 -> 4 -> 5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 6

Enter K : 3

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 5

3 -> 2 -> 1 -> 5 -> 4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 7
                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 1

Enter data : 1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 2

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 3

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 5

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 5

1 -> 2 -> 3 -> 4 -> 5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 6

Enter K : 6

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 5

5 -> 4 -> 3 -> 2 -> 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 7
                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 1

Enter data : 1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 2

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 3

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 5

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 2

Enter data : 6

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 6

Enter K : 3

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 5

3 -> 2 -> 1 -> 6 -> 5 -> 4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1)insert at first
2)insert at last
3)delete at last
4)delete at first
5)display
6)reverse linklist
7)exit : 7


PROGRAM 4

                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 1
Enter customer id: 1
Enter the name of customer: yashvi
Enter customer phone number: 9428011136
node is added on first pos...
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 1
Enter customer id: 2
Enter the name of customer: yash
Enter customer phone number: 9364578253
node is added on first pos...
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 2
Enter customer id: 4
Enter the name of customer: mohit
Enter customer phone number: 6574839201
node is added on last pos...
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 1
Enter customer id: 3
Enter the name of customer: mihir
Enter customer phone number: 8465790234
node is added on first pos...
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 14
| |  3 | |      mihir | | 8465790234 | |
| |  2 | |       yash | | 9364578253 | |
| |  1 | |     yashvi | | 9428011136 | |
| |  4 | |      mohit | | 6574839201 | |
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 7
| |  1 | |     yashvi | | 9428011136 | |
| |  2 | |       yash | | 9364578253 | |
| |  3 | |      mihir | | 8465790234 | |
| |  4 | |      mohit | | 6574839201 | |
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 8
Enter the name of customer: mihir
name is in list....
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 12
Enter the id of customer: 3
| 3 | | mihir | | 8465790234 |
deleted ....
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 14
| |  1 | |     yashvi | | 9428011136 | |
| |  2 | |       yash | | 9364578253 | |
| |  4 | |      mohit | | 6574839201 | |
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 1
Enter customer id: 3
Enter the name of customer: surbhi
Enter customer phone number: 7345624356
node is added on first pos...
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 7
| |  1 | |     yashvi | | 9428011136 | |
| |  2 | |       yash | | 9364578253 | |
| |  3 | |     surbhi | | 7345624356 | |
| |  4 | |      mohit | | 6574839201 | |
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 11
Enter the name of customer: yashvi
| 1 | | yashvi | | 9428011136 |
deleted ....
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 14
| |  2 | |       yash | | 9364578253 | |
| |  3 | |     surbhi | | 7345624356 | |
| |  4 | |      mohit | | 6574839201 | |
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 13
Enter the phone number of customer: 9364578254
ERROR: not found...
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 14
| |  2 | |       yash | | 9364578253 | |
| |  3 | |     surbhi | | 7345624356 | |
| |  4 | |      mohit | | 6574839201 | |
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 6
| 4 | | mohit | | 6574839201 |
data is deleted.....
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 14
| |  2 | |       yash | | 9364578253 | |
| |  3 | |     surbhi | | 7345624356 | |
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 4
Enter index Num: 1
| 2 | | yash | | 9364578253 |
Node is delete...
________________________________________
1.  Insert first contact
2.  Insert last contact 
3.  Insert specific index contact
4.  Delete sepcific position contact
5.  Delete first contact
6.  Delete last contact
7.  Display sorted order
8.  Search contact by name
9.  Search contact by customer id
10. Search contact by phone number
11. Delete contact by name
12. Delete contact by customer id
13. Delete contact by phone number
14. Display contact list
15. Exit Program
________________________________________
Enter your choise : 14
| |  3 | |     surbhi | | 7345624356 | |


PROGRAM 5

┌──(kali㉿kali)-[~/Downloads]
└─$ ./p


1)Enqueue
2)Dequeue
3)Display:
1

Enter data : 1

Enter priority : 3


1)Enqueue
2)Dequeue
3)Display:
1

Enter data : 2

Enter priority : 1


1)Enqueue
2)Dequeue
3)Display:
1

Enter data : 45

Enter priority : 4


1)Enqueue
2)Dequeue
3)Display:
1

Enter data : 23

Enter priority : 2


1)Enqueue
2)Dequeue
3)Display:
1

Enter data : 67

Enter priority : 3


1)Enqueue
2)Dequeue
3)Display:
5

invalid

1)Enqueue
2)Dequeue
3)Display:
3

| 2 has priority : 1 |
| 23 has priority : 2 |
| 67 has priority : 3 |
| 1 has priority : 3 |
| 45 has priority : 4 |


1)Enqueue
2)Dequeue
3)Display:
2

2 node having priority 1 is completed


1)Enqueue
2)Dequeue
3)Display:
3

| 23 has priority : 2 |
| 67 has priority : 3 |
| 1 has priority : 3 |
| 45 has priority : 4 |


1)Enqueue
2)Dequeue
3)Display:
1

Enter data : 25

Enter priority : 5 


1)Enqueue
2)Dequeue
3)Display:
1

Enter data : 32

Enter priority : 1


1)Enqueue
2)Dequeue
3)Display:
5

invalid

1)Enqueue
2)Dequeue
3)Display:
3

| 32 has priority : 1 |
| 23 has priority : 2 |
| 67 has priority : 3 |
| 1 has priority : 3 |
| 45 has priority : 4 |
| 25 has priority : 5 |


1)Enqueue
2)Dequeue
3)Display:
2

32 node having priority 1 is completed


1)Enqueue
2)Dequeue
3)Display:
2

23 node having priority 2 is completed


1)Enqueue
2)Dequeue
3)Display:
2

67 node having priority 3 is completed


1)Enqueue
2)Dequeue
3)Display:
3

| 1 has priority : 3 |
| 45 has priority : 4 |
| 25 has priority : 5 |


PROGRAM 6

                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p < input_direct_unweight
Graph matrix is....
|  0 ||  1 ||  1 ||  0 ||  0 ||  1 |
|  0 ||  0 ||  0 ||  1 ||  0 ||  0 |
|  0 ||  0 ||  0 ||  0 ||  1 ||  0 |
|  0 ||  0 ||  0 ||  0 ||  0 ||  1 |
|  0 ||  0 ||  0 ||  0 ||  0 ||  1 |
|  0 ||  0 ||  0 ||  0 ||  0 ||  0 |

===================================================
DFS is.....
| 1 || 6 || 3 || 5 || 2 || 4 |
===================================================
BFS is.....
| 1 || 2 || 3 || 6 || 4 || 5 |
                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p < input_direct_weight  
Graph matrix is....
|  0 ||  5 ||  6 ||  0 ||  0 ||  2 |
|  0 ||  0 ||  0 ||  1 ||  0 ||  0 |
|  0 ||  0 ||  0 ||  0 ||  4 ||  0 |
|  0 ||  0 ||  0 ||  0 ||  0 ||  7 |
|  0 ||  0 ||  0 ||  0 ||  0 || 10 |
|  0 ||  0 ||  0 ||  0 ||  0 ||  0 |

===================================================
DFS is.....
| 1 || 6 || 3 || 5 || 2 || 4 |
===================================================
BFS is.....
| 1 || 2 || 3 || 6 || 4 || 5 |
                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p < input_undirect_weight
Graph list is....
{ 1, 1 } -> { 2, 5 } -> { 3, 6 } -> { 6, 2 } -> 
{ 2, 1 } -> { 1, 5 } -> { 4, 1 } -> 
{ 3, 1 } -> { 1, 6 } -> { 5, 4 } -> 
{ 4, 1 } -> { 2, 1 } -> { 6, 7 } -> 
{ 5, 1 } -> { 3, 4 } -> { 6, 10 } -> 
{ 6, 1 } -> { 1, 2 } -> { 4, 7 } -> { 5, 10 } -> 
===================================================
DFS is.....
| 1 || 6 || 5 || 4 || 3 || 2 |
===================================================
BFS is.....
| 1 || 2 || 3 || 6 || 4 || 5 |
                                                                                                                                       
┌──(kali㉿kali)-[~/Downloads]
└─$ ./p < input_undirect_unweight
Graph list is....
{ 1 } -> { 2 } -> { 3 } -> { 6 } -> 
{ 2 } -> { 1 } -> { 4 } -> 
{ 3 } -> { 1 } -> { 5 } -> 
{ 4 } -> { 2 } -> { 6 } -> 
{ 5 } -> { 3 } -> { 6 } -> 
{ 6 } -> { 1 } -> { 4 } -> { 5 } -> 
===================================================
DFS is.....
| 1 || 6 || 5 || 4 || 3 || 2 |
===================================================
BFS is.....
| 1 || 2 || 3 || 6 || 4 || 5 |
                                    
